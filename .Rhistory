test %>% filter(domain == 3) %>% pull(y) %>% sd() -> sd_3
test %>% filter(domain == 4) %>% pull(y) %>% sd() -> sd_4
err[i] <- ((sd(test$y) - sqrt(linCvar(stds = c(sd_1, sd_2, sd_3, sd_4),
coeff = npop)))/sd(test$y))*100
}
mean(err)
err
mean(err)
hist(err)
sum(is.na(err))
which(is.na(err))
err[217]
# Percentage error
err <- numeric(1e4)
for(i in 1:1e3){
npop <- runif(4, 1, 1e4)
test <- unbPop(n = npop,
mu = c(3, 4, 2, 1), sd = c(1, 5, 19, 10))
# By domain
test %>% filter(domain == 1) %>% pull(y) %>% sd() -> sd_1
test %>% filter(domain == 2) %>% pull(y) %>% sd() -> sd_2
test %>% filter(domain == 3) %>% pull(y) %>% sd() -> sd_3
test %>% filter(domain == 4) %>% pull(y) %>% sd() -> sd_4
err[i] <- ((sd(test$y) - sqrt(linCvar(stds = c(sd_1, sd_2, sd_3, sd_4),
coeff = npop)))/sd(test$y))*100
}
mean(err)
# Percentage error
nsim <- 1e3
err <- numeric(nsim)
for(i in 1:nsim){
npop <- runif(4, 1, 1e4)
test <- unbPop(n = npop,
mu = c(3, 4, 2, 1), sd = c(1, 5, 19, 10))
# By domain
test %>% filter(domain == 1) %>% pull(y) %>% sd() -> sd_1
test %>% filter(domain == 2) %>% pull(y) %>% sd() -> sd_2
test %>% filter(domain == 3) %>% pull(y) %>% sd() -> sd_3
test %>% filter(domain == 4) %>% pull(y) %>% sd() -> sd_4
err[i] <- ((sd(test$y) - sqrt(linCvar(stds = c(sd_1, sd_2, sd_3, sd_4),
coeff = npop)))/sd(test$y))*100
}
mean(err)
# Percentage error
nsim <- 1e3
err <- numeric(nsim)
for(i in 1:nsim){
npop <- runif(4, 1, 1e4)
test <- unbPop(n = npop,
mu = c(3, 4, 2, 1), sd = c(1, 5, 19, 10))
# By domain
test %>% filter(domain == 1) %>% pull(y) %>% sd() -> sd_1
test %>% filter(domain == 2) %>% pull(y) %>% sd() -> sd_2
test %>% filter(domain == 3) %>% pull(y) %>% sd() -> sd_3
test %>% filter(domain == 4) %>% pull(y) %>% sd() -> sd_4
err[i] <- ((sd(test$y) - sqrt(linCvar(stds = c(sd_1, sd_2, sd_3, sd_4),
coeff = npop)))/sd(test$y))*100
}
mean(err)
# Study of the mean
linCmean <- function(coeff, mus){
coeff <- coeff/sum(coeff)
v1 <- coeff ; v2 <- mus
return(as.numeric(v1%*%v2))
}
npop <- runif(4, 1, 1e4)
mus <- c(3, 4, 2, 1)
linCmean(mus = mus, coeff = npop)
mean(test$y)
npop <- runif(4, 1, 1e4)
mus <- c(3, 4, 2, 1)
test <- unbPop(n = npop,
mu = mus, sd = c(1, 5, 19, 10))
# By domain
test %>% filter(domain == 1) %>% pull(y) %>% sd() -> sd_1
test %>% filter(domain == 2) %>% pull(y) %>% sd() -> sd_2
test %>% filter(domain == 3) %>% pull(y) %>% sd() -> sd_3
test %>% filter(domain == 4) %>% pull(y) %>% sd() -> sd_4
mean(test$y)
linCmean(mus = mus, coeff = npop)
for(i in 1:nsim){
npop <- runif(4, 1, 1e4)
mus <- c(3, 4, 2, 1)
test <- unbPop(n = npop,
mu = mus, sd = c(1, 5, 19, 10))
# By domain
test %>% filter(domain == 1) %>% pull(y) %>% mean() -> m1
test %>% filter(domain == 2) %>% pull(y) %>% mean() -> m2
test %>% filter(domain == 3) %>% pull(y) %>% mean() -> m3
test %>% filter(domain == 4) %>% pull(y) %>% mean() -> m4
err2[i] <- ((mean(test$y) -
linCmean(mus = c(m1, m2, m3, m4),
coeff = npop)))/mean(test$y))*100
}
err2 <- numeric(nsim)
for(i in 1:nsim){
npop <- runif(4, 1, 1e4)
mus <- c(3, 4, 2, 1)
test <- unbPop(n = npop,
mu = mus, sd = c(1, 5, 19, 10))
# By domain
test %>% filter(domain == 1) %>% pull(y) %>% mean() -> m1
test %>% filter(domain == 2) %>% pull(y) %>% mean() -> m2
test %>% filter(domain == 3) %>% pull(y) %>% mean() -> m3
test %>% filter(domain == 4) %>% pull(y) %>% mean() -> m4
err2[i] <- ((mean(test$y) -
linCmean(mus = c(m1, m2, m3, m4),
coeff = npop)))/mean(test$y))*100
}
err2 <- numeric(nsim)
for(i in 1:nsim){
npop <- runif(4, 1, 1e4)
mus <- c(3, 4, 2, 1)
test <- unbPop(n = npop,
mu = mus, sd = c(1, 5, 19, 10))
# By domain
test %>% filter(domain == 1) %>% pull(y) %>% mean() -> m1
test %>% filter(domain == 2) %>% pull(y) %>% mean() -> m2
test %>% filter(domain == 3) %>% pull(y) %>% mean() -> m3
test %>% filter(domain == 4) %>% pull(y) %>% mean() -> m4
err2[i] <- ((mean(test$y) -
linCmean(mus = c(m1, m2, m3, m4),
coeff = npop)))/mean(test$y)*100
}
mean(err2)
err2 <- numeric(nsim)
for(i in 1:nsim){
npop <- runif(4, 1, 1e4)
mus <- c(3, 4, 2, 1)
test <- unbPop(n = npop,
mu = mus, sd = c(1, 5, 19, 10))
# By domain
test %>% filter(domain == 1) %>% pull(y) %>% mean() -> m1
test %>% filter(domain == 2) %>% pull(y) %>% mean() -> m2
test %>% filter(domain == 3) %>% pull(y) %>% mean() -> m3
test %>% filter(domain == 4) %>% pull(y) %>% mean() -> m4
err2[i] <- ((mean(test$y) -
linCmean(mus = c(m1, m2, m3, m4),
coeff = npop))/mean(test$y))*100
}
mean(err2)
linCvar <- function(coeff, stds){
coeff <- coeff/sum(coeff)
v1 <- coeff^2 ; v2 <- stds
return(as.numeric(v1%*%(v2^2)))
}
# Percentage error
nsim <- 1e3
err <- numeric(nsim)
for(i in 1:nsim){
npop <- runif(4, 1, 1e4)
mus <- c(3, 4, 2, 1)
test <- unbPop(n = npop,
mu = mus, sd = c(1, 5, 19, 10))
# By domain
test %>% filter(domain == 1) %>% pull(y) %>% sd() -> sd_1
test %>% filter(domain == 2) %>% pull(y) %>% sd() -> sd_2
test %>% filter(domain == 3) %>% pull(y) %>% sd() -> sd_3
test %>% filter(domain == 4) %>% pull(y) %>% sd() -> sd_4
err[i] <- ((sd(test$y) -
sqrt(linCvar(stds = c(sd_1, sd_2, sd_3, sd_4),
coeff = npop)))/sd(test$y))*100
}
mean(err)
nsim <- 1e3
err <- numeric(nsim)
for(i in 1:nsim){
npop <- runif(4, 1, 1e4)
mus <- c(3, 4, 2, 1)
test <- unbPop(n = npop,
mu = mus, sd = c(1, 5, 19, 10))
# By domain
test %>% filter(domain == 1) %>% pull(y) %>% sd() -> sd_1
test %>% filter(domain == 2) %>% pull(y) %>% sd() -> sd_2
test %>% filter(domain == 3) %>% pull(y) %>% sd() -> sd_3
test %>% filter(domain == 4) %>% pull(y) %>% sd() -> sd_4
err[i] <- ((sd(test$y) -
sqrt(linCvar(stds = c(sd_1, sd_2, sd_3, sd_4),
coeff = npop)))/sd(test$y))*100
}
linCvar <- function(coeff, stds){
coeff <- coeff/sum(coeff)
v1 <- coeff ; v2 <- stds
return(as.numeric(v1%*%(v2)))
}
nsim <- 1e3
err <- numeric(nsim)
for(i in 1:nsim){
npop <- runif(4, 1, 1e4)
mus <- c(3, 4, 2, 1)
test <- unbPop(n = npop,
mu = mus, sd = c(1, 5, 19, 10))
# By domain
test %>% filter(domain == 1) %>% pull(y) %>% sd() -> sd_1
test %>% filter(domain == 2) %>% pull(y) %>% sd() -> sd_2
test %>% filter(domain == 3) %>% pull(y) %>% sd() -> sd_3
test %>% filter(domain == 4) %>% pull(y) %>% sd() -> sd_4
err[i] <- ((sd(test$y) -
sqrt(linCvar(stds = c(sd_1, sd_2, sd_3, sd_4),
coeff = npop)))/sd(test$y))*100
}
mean(err)
source("C:/Users/mgram/Desktop/Furfaro18/MF/functions2.R")
linCmean <- function(coeff, mus){
coeff <- coeff/sum(coeff)
v1 <- coeff ; v2 <- mus
return(as.numeric(v1%*%v2))
}
mean(test$y)
linCmean(mus = mus, coeff = npop)
err2 <- numeric(nsim)
for(i in 1:nsim){
npop <- runif(4, 1, 1e4)
mus <- c(3, 4, 2, 1)
test <- unbPop(n = npop,
mu = mus, sd = c(1, 5, 19, 10))
# By domain
test %>% filter(domain == 1) %>% pull(y) %>% mean() -> m1
test %>% filter(domain == 2) %>% pull(y) %>% mean() -> m2
test %>% filter(domain == 3) %>% pull(y) %>% mean() -> m3
test %>% filter(domain == 4) %>% pull(y) %>% mean() -> m4
err2[i] <- ((mean(test$y) -
linCmean(mus = c(m1, m2, m3, m4),
coeff = npop))/mean(test$y))*100
}
mean(err2)
linCmean <- function(coeff, mus){
coeff <- coeff/sum(coeff)
v1 <- coeff ; v2 <- mus
return(as.numeric(v1%*%v2))
}
mean(test$y)
linCmean(mus = mus, coeff = npop)
nsim <- 1e3
err2 <- numeric(nsim)
for(i in 1:nsim){
npop <- runif(4, 1, 1e4)
mus <- c(3, 4, 2, 1)
test <- unbPop(n = npop,
mu = mus, sd = c(1, 5, 19, 10))
# By domain
test %>% filter(domain == 1) %>% pull(y) %>% mean() -> m1
test %>% filter(domain == 2) %>% pull(y) %>% mean() -> m2
test %>% filter(domain == 3) %>% pull(y) %>% mean() -> m3
test %>% filter(domain == 4) %>% pull(y) %>% mean() -> m4
err2[i] <- ((mean(test$y) -
linCmean(mus = c(m1, m2, m3, m4),
coeff = npop))/mean(test$y))*100
}
mean(err2) # error is neglegible under 0.0003 percent
##### Unbalanced populations
unbPop <- function(n, mu, sd){
domain <- c(rep(1, n[1]), rep(2, n[2]), rep(3, n[3]), rep(4, n[4]))
y <- c(rnorm(n[1], mu[1], sd[1]), rnorm(n[2], mu[2], sd[2]),
rnorm(n[3], mu[3], sd[3]), rnorm(n[4], mu[4], sd[4]))
data <- data.frame(domain, y)
return(data)
}
linCmean <- function(coeff, mus){
coeff <- coeff/sum(coeff)
v1 <- coeff ; v2 <- mus
return(as.numeric(v1%*%v2))
}
mean(test$y)
linCmean(mus = mus, coeff = npop)
nsim <- 1e3
err2 <- numeric(nsim)
for(i in 1:nsim){
npop <- runif(4, 1, 1e4)
mus <- c(3, 4, 2, 1)
test <- unbPop(n = npop,
mu = mus, sd = c(1, 5, 19, 10))
# By domain
test %>% filter(domain == 1) %>% pull(y) %>% mean() -> m1
test %>% filter(domain == 2) %>% pull(y) %>% mean() -> m2
test %>% filter(domain == 3) %>% pull(y) %>% mean() -> m3
test %>% filter(domain == 4) %>% pull(y) %>% mean() -> m4
err2[i] <- ((mean(test$y) -
linCmean(mus = c(m1, m2, m3, m4),
coeff = npop))/mean(test$y))*100
}
mean(err2)
nsim <- 1e3
err <- numeric(nsim)
for(i in 1:nsim){
npop <- runif(4, 1, 1e4)
mus <- c(3, 4, 2, 1)
test <- unbPop(n = npop,
mu = mus, sd = c(1, 5, 19, 10))
# By domain
test %>% filter(domain == 1) %>% pull(y) %>% sd() -> sd_1
test %>% filter(domain == 2) %>% pull(y) %>% sd() -> sd_2
test %>% filter(domain == 3) %>% pull(y) %>% sd() -> sd_3
test %>% filter(domain == 4) %>% pull(y) %>% sd() -> sd_4
err[i] <- ((sd(test$y) -
sqrt(linCvar(stds = c(sd_1, sd_2, sd_3, sd_4),
coeff = npop)))/sd(test$y))*100
}
mean(err)
linCvar <- function(coeff, stds){
coeff <- coeff/sum(coeff)
v1 <- coeff ; v2 <- stds^2
return(as.numeric(v1%*%(v2)))
}
nsim <- 1e3
err <- numeric(nsim)
for(i in 1:nsim){
npop <- runif(4, 1, 1e4)
mus <- c(3, 4, 2, 1)
test <- unbPop(n = npop,
mu = mus, sd = c(1, 5, 19, 10))
# By domain
test %>% filter(domain == 1) %>% pull(y) %>% sd() -> sd_1
test %>% filter(domain == 2) %>% pull(y) %>% sd() -> sd_2
test %>% filter(domain == 3) %>% pull(y) %>% sd() -> sd_3
test %>% filter(domain == 4) %>% pull(y) %>% sd() -> sd_4
err[i] <- ((sd(test$y) -
sqrt(linCvar(stds = c(sd_1, sd_2, sd_3, sd_4),
coeff = npop)))/sd(test$y))*100
}
mean(err)
# Percentage error
nsim <- 1e4
nsim <- 1e4
err <- numeric(nsim)
for(i in 1:nsim){
npop <- runif(4, 1, 1e4)
mus <- c(3, 4, 2, 1)
test <- unbPop(n = npop,
mu = mus, sd = c(1, 5, 19, 10))
# By domain
test %>% filter(domain == 1) %>% pull(y) %>% sd() -> sd_1
test %>% filter(domain == 2) %>% pull(y) %>% sd() -> sd_2
test %>% filter(domain == 3) %>% pull(y) %>% sd() -> sd_3
test %>% filter(domain == 4) %>% pull(y) %>% sd() -> sd_4
err[i] <- ((sd(test$y) -
sqrt(linCvar(stds = c(sd_1, sd_2, sd_3, sd_4),
coeff = npop)))/sd(test$y))*100
}
mean(err)
nsim <- 1e3
err <- numeric(nsim)
for(i in 1:nsim){
npop <- runif(4, 1, 1e4)
mus <- c(3, 4, 2, 1)
test <- unbPop(n = npop,
mu = mus, sd = c(1, 5, 19, 10))
# By domain
test %>% filter(domain == 1) %>% pull(y) %>% sd() -> sd_1
test %>% filter(domain == 2) %>% pull(y) %>% sd() -> sd_2
test %>% filter(domain == 3) %>% pull(y) %>% sd() -> sd_3
test %>% filter(domain == 4) %>% pull(y) %>% sd() -> sd_4
err[i] <- ((sd(test$y) -
sqrt(linCvar(stds = c(sd_1, sd_2, sd_3, sd_4),
coeff = npop)))/sd(test$y))*100
}
mean(err)
err
sum(is.na(err))
nsim <- 1e3
err <- numeric(nsim)
for(i in 1:nsim){
npop <- runif(4, 1, 1e4)
mus <- c(3, 4, 2, 1)
test <- unbPop(n = npop,
mu = mus, sd = c(1, 5, 19, 10))
# By domain
test %>% filter(domain == 1) %>% pull(y) %>% sd() -> sd_1
test %>% filter(domain == 2) %>% pull(y) %>% sd() -> sd_2
test %>% filter(domain == 3) %>% pull(y) %>% sd() -> sd_3
test %>% filter(domain == 4) %>% pull(y) %>% sd() -> sd_4
err[i] <- ((sd(test$y) -
sqrt(linCvar(stds = c(sd_1, sd_2, sd_3, sd_4),
coeff = npop)))/sd(test$y))*100
}
mean(err)
linCvar <- function(coeff, stds){
coeff <- coeff/sum(coeff)
v1 <- coeff ; v2 <- stds^2
return(as.numeric(v1%*%(v2)))
}
nsim <- 1e3
err <- numeric(nsim)
for(i in 1:nsim){
npop <- runif(4, 1, 1e4)
mus <- c(3, 4, 2, 1)
test <- unbPop(n = npop,
mu = mus, sd = c(1, 5, 19, 10))
# By domain
test %>% filter(domain == 1) %>% pull(y) %>% sd() -> sd_1
test %>% filter(domain == 2) %>% pull(y) %>% sd() -> sd_2
test %>% filter(domain == 3) %>% pull(y) %>% sd() -> sd_3
test %>% filter(domain == 4) %>% pull(y) %>% sd() -> sd_4
err[i] <- ((sd(test$y) -
sqrt(linCvar(stds = c(sd_1, sd_2, sd_3, sd_4),
coeff = npop)))/sd(test$y))*100
}
mean(err)
nsim <- 1e3
err <- numeric(nsim)
for(i in 1:nsim){
npop <- runif(4, 1, 1e4)
mus <- c(3, 4, 2, 1)
test <- unbPop(n = npop,
mu = mus, sd = c(1, 5, 19, 10))
# By domain
test %>% filter(domain == 1) %>% pull(y) %>% sd() -> sd_1
test %>% filter(domain == 2) %>% pull(y) %>% sd() -> sd_2
test %>% filter(domain == 3) %>% pull(y) %>% sd() -> sd_3
test %>% filter(domain == 4) %>% pull(y) %>% sd() -> sd_4
err[i] <- ((var(test$y) -
(linCvar(stds = c(sd_1, sd_2, sd_3, sd_4)^2,
coeff = npop)))/var(test$y))*100
}
mean(err)
npop <- runif(4, 1, 1e4)
mus <- c(3, 4, 2, 1)
test <- unbPop(n = npop,
mu = mus, sd = c(1, 5, 19, 10))
# By domain
test %>% filter(domain == 1) %>% pull(y) %>% sd() -> sd_1
test %>% filter(domain == 2) %>% pull(y) %>% sd() -> sd_2
test %>% filter(domain == 3) %>% pull(y) %>% sd() -> sd_3
test %>% filter(domain == 4) %>% pull(y) %>% sd() -> sd_4
c(sd_1, sd_2, sd_3, sd_4)
c(sd_1, sd_2, sd_3, sd_4)^2
var(test$y)
linCvar <- function(coeff, stds){
coeff <- coeff/sum(coeff)
v1 <- coeff ; v2 <- stds
return(as.numeric(v1%*%(v2)))
}
# Percentage error
nsim <- 1e3
err <- numeric(nsim)
for(i in 1:nsim){
npop <- runif(4, 1, 1e4)
mus <- c(3, 4, 2, 1)
test <- unbPop(n = npop,
mu = mus, sd = c(1, 5, 19, 10))
# By domain
test %>% filter(domain == 1) %>% pull(y) %>% sd() -> sd_1
test %>% filter(domain == 2) %>% pull(y) %>% sd() -> sd_2
test %>% filter(domain == 3) %>% pull(y) %>% sd() -> sd_3
test %>% filter(domain == 4) %>% pull(y) %>% sd() -> sd_4
err[i] <- ((var(test$y) -
(linCvar(stds = c(sd_1, sd_2, sd_3, sd_4)^2,
coeff = npop)))/var(test$y))*100
}
mean(err)
sum(is.na(err))
# Percentage error
nsim <- 1e3
err <- numeric(nsim)
for(i in 1:nsim){
npop <- runif(4, 1, 1e4)
mus <- c(3, 4, 2, 1)
test <- unbPop(n = npop,
mu = mus, sd = c(1, 5, 19, 10))
# By domain
test %>% filter(domain == 1) %>% pull(y) %>% sd() -> sd_1
test %>% filter(domain == 2) %>% pull(y) %>% sd() -> sd_2
test %>% filter(domain == 3) %>% pull(y) %>% sd() -> sd_3
test %>% filter(domain == 4) %>% pull(y) %>% sd() -> sd_4
err[i] <- ((var(test$y) -
(linCvar(stds = c(sd_1, sd_2, sd_3, sd_4)^2,
coeff = npop)))/var(test$y))*100
}
mean(err)
hist(err)
nsim <- 1e3
err <- numeric(nsim)
for(i in 1:nsim){
npop <- runif(4, 1, 1e4)
mus <- c(3, 4, 2, 1)
test <- unbPop(n = npop,
mu = mus, sd = c(1, 3, 7, 9))
# By domain
test %>% filter(domain == 1) %>% pull(y) %>% sd() -> sd_1
test %>% filter(domain == 2) %>% pull(y) %>% sd() -> sd_2
test %>% filter(domain == 3) %>% pull(y) %>% sd() -> sd_3
test %>% filter(domain == 4) %>% pull(y) %>% sd() -> sd_4
err[i] <- ((var(test$y) -
(linCvar(stds = c(sd_1, sd_2, sd_3, sd_4)^2,
coeff = npop)))/var(test$y))*100
}
mean(err)
hist(err)
max(err)
var(test$y)
linCvar <- function(coeff, mus, vars){
coeff <- coeff/sum(coeff)
final <- coeff%*%vars + (coeff%*%(mus^2) - (coeff%*%mus)^2)
return(as.numeric(final))
}
nsim <- 1e3
err <- numeric(nsim)
for(i in 1:nsim){
npop <- runif(4, 1, 1e4)
mus <- c(3, 4, 2, 1)
test <- unbPop(n = npop,
mu = mus, sd = c(1, 3, 7, 9))
# By domain
test %>% filter(domain == 1) %>% pull(y) %>% sd() -> sd_1
test %>% filter(domain == 2) %>% pull(y) %>% sd() -> sd_2
test %>% filter(domain == 3) %>% pull(y) %>% sd() -> sd_3
test %>% filter(domain == 4) %>% pull(y) %>% sd() -> sd_4
err[i] <- ((var(test$y) -
(linCvar(vars = c(sd_1, sd_2, sd_3, sd_4)^2,
coeff = npop, mus = mus)))/var(test$y))*100
}
mean(err)
